[{"/Users/kostik/Documents/code/catyblog/src/index.tsx":"1","/Users/kostik/Documents/code/catyblog/src/App.tsx":"2","/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/Login.tsx":"3","/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/utils/utils.tsx":"4","/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/component/inputs/LoginInput/Input.tsx":"5","/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/component/inputs/PasswordInput/Input.tsx":"6"},{"size":262,"mtime":1673796915614,"results":"7","hashOfConfig":"8"},{"size":1187,"mtime":1674321590902,"results":"9","hashOfConfig":"8"},{"size":2434,"mtime":1674325155997,"results":"10","hashOfConfig":"8"},{"size":565,"mtime":1674308637843,"results":"11","hashOfConfig":"8"},{"size":678,"mtime":1674308637794,"results":"12","hashOfConfig":"8"},{"size":1213,"mtime":1674325390255,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1k6uoze",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kostik/Documents/code/catyblog/src/index.tsx",[],[],[],"/Users/kostik/Documents/code/catyblog/src/App.tsx",["34","35","36"],[],"import React, { ReactPropTypes } from 'react'\nimport './App.css'\nimport PageLogin from './SuperGroup/Login/Login'\nimport {\n  BrowserRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Routes\n} from 'react-router-dom'\n\nexport const RequiredAuth = ({ children }: { children: JSX.Element }) => {\n  const [isAuth, setIsAuth] = React.useState(false)\n\n  if (isAuth) {\n    return <Navigate to={'/login'} replace />\n  }\n  return children\n}\n\nconst Layout = () => {\n  return (\n    <>\n      <div>LANG</div>\n      <Outlet />\n      <div>FOOTER</div>\n    </>\n  )\n}\n\nfunction App () {\n  const [isAuth, setIsAuth] = React.useState(true)\n\n  return (\n    <BrowserRouter>\n      {isAuth ? (\n        <Routes>\n          <Route path='/' element={<Layout />}>\n            <Route\n              path='/login'\n              element={\n                <RequiredAuth>\n                  <PageLogin />\n                </RequiredAuth>\n              }\n            ></Route>\n          </Route>\n          <Route path='*' element={<PageLogin />}></Route>\n        </Routes>\n      ) : (\n        <Routes>\n          <Route path='*' element={<PageLogin />}></Route>\n        </Routes>\n      )}\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/Login.tsx",["37","38"],[],"/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/utils/utils.tsx",[],[],"/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/component/inputs/LoginInput/Input.tsx",[],[],"/Users/kostik/Documents/code/catyblog/src/SuperGroup/Login/component/inputs/PasswordInput/Input.tsx",["39"],[],{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":31},{"ruleId":"40","severity":1,"message":"44","line":13,"column":18,"nodeType":"42","messageId":"43","endLine":13,"endColumn":27},{"ruleId":"40","severity":1,"message":"44","line":32,"column":18,"nodeType":"42","messageId":"43","endLine":32,"endColumn":27},{"ruleId":"45","severity":1,"message":"46","line":49,"column":11,"nodeType":"47","endLine":49,"endColumn":47},{"ruleId":"45","severity":1,"message":"46","line":51,"column":11,"nodeType":"47","endLine":51,"endColumn":48},{"ruleId":"48","severity":1,"message":"49","line":34,"column":9,"nodeType":"47","endLine":38,"endColumn":10},"@typescript-eslint/no-unused-vars","'ReactPropTypes' is defined but never used.","Identifier","unusedVar","'setIsAuth' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]